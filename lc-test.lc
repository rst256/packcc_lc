x=5+6;
vvv=5*pi/(e+1);
_v=5*pi/(e+1);vv6_=7-(int*)(pi*2);
t1=vvv;t2=vvv[5/2]-
e(pi(), vvv(7+6)) * e.f1[5+6].f2(pi(), vvv(7+6));
e(pi(), vvv(7+6), e.f1[5+6].f2(pi(), vvv(7+6)));
{
	int* i_ptr;
	char  c
};
char[20+4] buff;
char*[20+4] buffs;
char*[20+4]* buffs_ptr;
const char*[20+4]* const_buffs_ptr;
int const * i_const_ptr1=777; struct { int i; char[20] n; } strct1;
struct strct2_tag { int i; char[20] n; } strct2; struct strct2_tag s4;
int const * i_const_ptr;struct { int i; char[20] n; } strct; char[9*9] b;

list<int[10]*> l;
static hash<int[10]*, const char static* > rrr;
array<long*, 10 > a;
@{struct { int i; char[20] n; } } meta;
@{struct { int i; union {static array<long,10> a; struct { int i; char[20] n; } strct;} u; } } meta;

if( !v ){ printf(fmt, v); v=0; return(v);  };
if( !v ){ printf(fmt, v) }else{ v=v+1; return(v) };

if( !v ) return(null);
if( v==666 ) printf(fmt, v) else return(v);

if( !v ) ;

for( int k=0; !k; ++k); printf(k);
for( int k=0; !k; k+=1) printf(k) last print_nl(); 

void* malloc(size_t size);
void* malloc(size_t size) if(size==0) return(NULL) ;